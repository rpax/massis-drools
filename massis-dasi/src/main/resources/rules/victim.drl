//created on: Apr 16, 2016
package com.massisframework.massis.dasi.apps.robots.victim

import java.util.*;
import java.util.concurrent.*;
import com.massisframework.massis.dasi.lowlevel.LowLevelInfo;
import com.massisframework.massis.dasi.agents.goals.*;
import com.massisframework.massis.dasi.agents.tasks.AgentTask;
import com.massisframework.massis.dasi.agents.tasks.SimpleTasksFactory;
import com.massisframework.massis.dasi.events.messages.MessageReceived;
import com.massisframework.massis.model.agents.LowLevelAgent;
import com.massisframework.massis.model.building.SimRoom;
import com.massisframework.massis.model.location.Location;

//Robots
import com.massisframework.massis.dasi.apps.robots.*;
import com.massisframework.massis.dasi.apps.robots.commontasks.*;

//Base
import com.massisframework.massis.dasi.apps.robots.base.BaseAgent;
//Victim
import com.massisframework.massis.dasi.apps.robots.victim.*;
import com.massisframework.massis.dasi.apps.robots.victim.info.*;

//Messages
import com.massisframework.massis.dasi.apps.robots.messages.*;
import com.massisframework.massis.dasi.apps.robots.messages.meeting.*;
import com.massisframework.massis.dasi.apps.robots.messages.getHelp.*;




//declare any global variables here
rule "Generate Goal Memory"
	when
		not GoalMemory(  )
 	then
  		insert(new GoalMemory());
end

//-------------------------------------------
//---------- Encontrar a la base ------------
//-------------------------------------------
rule "Si no conozco a la base"
	when
		$me : VictimRobot()
		not(eval($me.isBaseKnow()))
	then
		String uuid=UUID.randomUUID().toString();
	   	SimpleTasksFactory.sendMessage($me,new Hi("",uuid));
end


rule "Recibo mensaje de la base."
    when
        $me 	: VictimRobot()
        $mr		: MessageReceived(
						data instanceof Hi,
						sender instanceof BaseAgent,
						$sender  : sender,
						$uuid : data.uuid
 					) from entry-point MESSAGING
    then
	 modify($me){setBase((BaseAgent)$sender)}
	 delete($mr);
end

//-------------------------------------------
//------- Logica general de victima ---------
//-------------------------------------------

rule "Select target"	
    when
    	$me : VictimRobot()
    	LowLevelInfo($lla : lowLevelAgent)
        not CurrentTarget()
    then
    	SimRoom rndRoom = $lla.getRandomRoom();
        Location rndLoc = rndRoom.getRandomLoc();
		CurrentTarget currentTarget = new CurrentTarget(rndLoc);
		insert(currentTarget);
end

rule "Less than 1 meter of distance : remove current target"
	
    when
    	LowLevelInfo( $currentLoc : location  )
        $currentTarget : CurrentTarget(location.distance2D($currentLoc)<100)
    then
    	delete($currentTarget);
end


rule "Move to the target (if has energy)"
	
    when
       $me : VictimRobot($energy : energy > 0)
       LowLevelInfo( $currentLoc : location )
       CurrentTarget(location.distance2D($currentLoc)>=100,$targetLoc : location)
    then
	  AgentTask task = new MoveToTarget();
	  task.execute($me,$targetLoc);
end



//-------------------------------------------
//------- Conseguir ayuda de la base --------
//-------------------------------------------

rule "Send help me message due to lack of energy"
    when
       not(exists(RequestVerified()))
       $me : VictimRobot(energy <= 0 )
       eval($me.isBaseKnow())
    then
       	String uuid=UUID.randomUUID().toString();
	   	SimpleTasksFactory.sendMessage($me,$me.getBase(),new NoEnergy($me.getLocation(), uuid));
end

rule "Received ACK message"
    when
        $me : VictimRobot(energy <= 0 )
        $mr		: MessageReceived(
						data instanceof IKnowYourState,
						sender instanceof BaseAgent,
						$sender  : sender,
						$uuid : data.uuid
 					) from entry-point MESSAGING
    then
 	 insert(new RequestVerified());
	 delete($mr);
end

rule "I have energy."
    when
       $re : RequestVerified()
       $me : VictimRobot(energy > 0 )
    then
   	  delete($re);
end
