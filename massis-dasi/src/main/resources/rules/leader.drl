//created on: Apr 11, 2016
package com.massisframework.massis.dasi.apps.robots.leader

//std imports
import java.util.*;
import java.util.concurrent.*;
import com.massisframework.massis.dasi.lowlevel.LowLevelInfo;
import com.massisframework.massis.dasi.agents.tasks.AgentTask;
import com.massisframework.massis.dasi.agents.tasks.SimpleTasksFactory;
import com.massisframework.massis.dasi.events.messages.MessageReceived;
import com.massisframework.massis.dasi.agents.goals.*;
import com.massisframework.massis.dasi.agents.goals.AgentGoal.GoalState;
//robots
import com.massisframework.massis.dasi.apps.robots.*;
import com.massisframework.massis.dasi.apps.robots.messages.*;
import com.massisframework.massis.dasi.apps.robots.messages.teamnegotiation.*;
//leader
import com.massisframework.massis.dasi.apps.robots.leader.*;
import com.massisframework.massis.dasi.apps.robots.leader.info.*;
import com.massisframework.massis.dasi.apps.robots.leader.tasks.*;
//declare any global variables here

//=============================================================================
// Goal selection
//-----------------------------------------------------------------------------
rule "Generate Goal Memory"
	ruleflow-group "goalselection"
	when
		not GoalMemory(  )
 	then
  		insert(new GoalMemory());
end

rule "Add know my team goal if not present"
	ruleflow-group "goalselection"
	when
		$gm : GoalMemory( $goals : goals , containsGoalByClass(KnowMyTeam.class)==false)
 	then
 		KnowMyTeam kmt = new KnowMyTeam();
 		insert(kmt);
  	    $gm.addGoal(kmt);
end

//=============================================================================
// Team negotiation rules
//-----------------------------------------------------------------------------

declare KnowMyTeamResponseTimer
    @expires( 10s )
    uuid : String
end
// Goal Trigger
rule "If I dont know my team : The current goal changes."
	ruleflow-group "goalresolution"
	when
		$me  : LeaderRobot()
		$gm  : GoalMemory()
		$kmt : KnowMyTeam ( goalState  == GoalState.PENDING ) from $gm.goals
 	then
 	   String uuid=UUID.randomUUID().toString();
 	   modify($kmt){ setGoalState( GoalState.SOLVING ) }
 	   SimpleTasksFactory.sendMessage($me,new JoinTeamRequest(uuid));
 	   KnowMyTeamResponseTimer timer = new KnowMyTeamResponseTimer();
 	   timer.setUuid(uuid);
 	   insert(timer);
end

rule "Solve the team negotiation"
	ruleflow-group "goalresolution"
	when
		$me		: LeaderRobot()
		$timer	: KnowMyTeamResponseTimer( $uuid : uuid)
		$gm     : GoalMemory()
		$kmt    : KnowMyTeam ( goalState  == GoalState.PENDING ) from $gm.goals 
		$mr		: MessageReceived(
							data instanceof JoinTeamResponse,
							$sender  : sender,
							$info : data.info,
 							data.uuid == $uuid
     						) from entry-point MESSAGING
 	then
 	  SimpleTasksFactory.sendMessage($me,new YouArePartOfMyTeam("1",$uuid));
end

rule "End the negotiation. The time is up"
	ruleflow-group "goalresolution"
	when
		$me		: LeaderRobot($teamMembers: teamMembers )
		$gm  	: GoalMemory()
		$kmt 	: KnowMyTeam ( goalState  == GoalState.PENDING ) from $gm.goals
		not (KnowMyTeamResponseTimer())
 	then
 	   modify( $kmt ) { setGoalState ( GoalState.SOLVED) }
 	   $me.getLogger().info("KnowMyTeam solved. Team members: "+$teamMembers);
end

//==================================================================================
// Victim saving
//----------------------------------------------------------------------------------

rule "Receive I have no energy message"
	ruleflow-group "goalresolution"
    when
       $me	: LeaderRobot()
       $mr		: MessageReceived(
							data instanceof IHaveNoEnergy,
							$sender  : sender,
							$location : data.info
     						) from entry-point MESSAGING
    then
	 $me.getLogger().info("Received help message from: "+$sender+", at location "+$location);
end










