//created on: Apr 11, 2016
package com.massisframework.massis.dasi.apps.robots.subordinate

//std imports
import java.util.*;
import java.util.concurrent.*;
import com.massisframework.massis.dasi.lowlevel.LowLevelInfo;
import com.massisframework.massis.dasi.agents.tasks.AgentTask;
import com.massisframework.massis.dasi.agents.tasks.SimpleTasksFactory;
import com.massisframework.massis.dasi.events.messages.MessageReceived;
import com.massisframework.massis.model.agents.LowLevelAgent;
import com.massisframework.massis.dasi.agents.goals.*;
//robots
import com.massisframework.massis.dasi.apps.robots.*;
import com.massisframework.massis.dasi.apps.robots.messages.*;
import com.massisframework.massis.dasi.apps.robots.messages.orders.*;
import com.massisframework.massis.dasi.apps.robots.messages.knowTeam.*;
import com.massisframework.massis.dasi.apps.robots.messages.getHelp.*;

import com.massisframework.massis.dasi.apps.robots.subordinate.*;
import com.massisframework.massis.dasi.apps.robots.subordinate.info.*;
import com.massisframework.massis.dasi.apps.robots.subordinate.goals.*;

import com.massisframework.massis.dasi.apps.robots.victim.*;

import com.massisframework.massis.dasi.apps.robots.leader.info.VictimToSave;
import com.massisframework.massis.dasi.apps.robots.commontasks.*;

//=============================================================================
// Goal selection
//-----------------------------------------------------------------------------
rule "Generate Goal Memory"
	when
		not GoalMemory(  )
 	then
  		insert(new GoalMemory());
end


//=============================================================================
// Team negotiation rules
//-----------------------------------------------------------------------------

rule "HiTeam message Received - It is my team."
	when
		$me   : SubordinateRobot($team: teamName)
		$mr : MessageReceived(
					data instanceof HiTeam,
					$sender  : sender,
					$team == data.info,
 					$uuid    :  data.uuid
     			) from entry-point MESSAGING
 	then
    	$me.info("HiTeam message Received - It is my team.", "titulo");
    	$me.info("Recibido mensaje de Hola del lider de mi equipo.", "info");
	  	$me.setLeader((RobotAgent)$sender);
 	  	$me.info("Envio Hola a el lider para que sepa que soy tambien de su equipo.", "envio");
 	  	SimpleTasksFactory.sendMessage($me,$sender,new HiTeamResponseMember($team, $uuid));
	  	retract($mr);
end



rule "You are part of my team message Received."
	when
		$me : SubordinateRobot($team : teamName)
		$mr : MessageReceived(
				data instanceof YouArePartOfMyTeam,
				$sender  : sender,
				$team == data.info,
 				$uuid    :  data.uuid
     		) from entry-point MESSAGING
 	then
		$me.info("You are part of my team message Received.", "titulo");
    	$me.info("Recibida confirmaciÃ³n de adhesion al equipo por parte del lider: "+$sender+".", "info");
	  	retract($mr);
end



//=============================================================================
// Operational order negotiation rules
//-----------------------------------------------------------------------------



rule "Received save victim order"
    when
	  	$gm : GoalMemory( $goals : goals , containsGoalByClass(HelpVictim.class)==false)
	   	$me	: SubordinateRobot(idle == true)
       	$mr	:	MessageReceived(
				data instanceof SaveVictim,
				$victim : data.info
			) from entry-point MESSAGING
    then
		$me.info("Received save victim order", "titulo");
    	$me.info("Recibida orden de salvar a "+$victim+".", "info");
	  	modify($me){setIdle(false)}
	  	insert(new VictimToSave($victim));	  
  		HelpVictim kmt = new HelpVictim((VictimRobot)$victim);
 		insert(kmt);
  	    $gm.addGoal(kmt);
	  	retract($mr);
end

rule "Save victim - approach"
    when	
		$gm  : GoalMemory()
		$kmt : HelpVictim ( goalState  == AgentGoal.PENDING ) from $gm.goals
    	VictimToSave($victim : victim)
       	$me	:   SubordinateRobot()
       	LowLevelInfo( location.distance2D($victim.getLocation())>1000)
    then
	  	AgentTask task = new MoveToTarget();
	  	task.execute($me,$victim.getLocation());
end

rule "Save victim - recharge"
    when
    	$gm  : GoalMemory()
	   	$kmt : HelpVictim ( goalState  == AgentGoal.PENDING ) from $gm.goals
       	$vts: VictimToSave($victim : victim)
       	$me	:   SubordinateRobot()
       	LowLevelInfo( location.distance2D($victim.getLocation())<=1000)
    then
	  	$me.info("Save victim - recharge", "titulo");
    	$me.info("Actualizo a "+$victim+" su energia.", "info");
		$me.info("Envio confirmacion de rescate a el lider: "+$me.getLeader()+".", "envio");

	  	$victim.setEnergy(1000);
		retract($vts);
	  	modify($me){setIdle(true)}
	  	String uuid=UUID.randomUUID().toString();
	  	SimpleTasksFactory.sendMessage($me,$me.getLeader(),new VictimSaved($victim, uuid));
  	  	modify($kmt){ setGoalState( AgentGoal.SOLVED ) }	   
end